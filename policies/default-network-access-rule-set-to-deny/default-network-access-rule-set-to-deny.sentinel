import "tfplan/v2" as tfplan

allStorageAccounts = filter tfplan.resource_changes as _, resource_changes {
	resource_changes.mode is "managed" and
		resource_changes.type is "azurerm_storage_account" and
		(resource_changes.change.actions contains "create" or
			resource_changes.change.actions is ["update"])
}

deny_undefined_network_rules = rule {
	all allStorageAccounts as _, accounts {
		keys(accounts.change.after) contains "network_rules"
	}
}

network_rules_default_action_is_deny = rule when deny_undefined_network_rules is true {
	all allStorageAccounts as _, accounts {
		all accounts.change.after.network_rules as network_rules {
			network_rules.default_action is "Deny"
		}
	}
}

// -------------------------------------------------------------
// Name:        default-network-access-rule-set-to-deny.sentinel
// Category:    Data Management
// Provider:    hashicorp/azurerm
// Resource:    azurerm_storage_account
// Check:       network_rules.default_action is "Deny"
// -------------------------------------------------------------
// Ensure default network access rule for Storage Accounts is
// set to deny.
// -------------------------------------------------------------
main = rule {
	deny_undefined_network_rules and
	network_rules_default_action_is_deny
}
